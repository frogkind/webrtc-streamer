dist: bionic
env:
language: cpp
compiler:
- gcc
script:
- sudo apt-get install --no-install-recommends -y libgtk-3-dev libasound2-dev crossbuild-essential-arm64
# get toolchain
- git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git && export PATH=$PATH:$(pwd)/depot_tools
# get WebRTC
- mkdir ../webrtc
- pushd ../webrtc
- travis_wait 30 fetch --no-history --nohooks webrtc
# patch webrtc to not download chromium-webrtc-resources
- sed -i -e "s|'src/resources'],|'src/resources'],'condition':'rtc_include_tests==true',|" src/DEPS
# get arm sysroot
- src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm64
# get WebRTC dependencies
- travis_wait 30 gclient sync
# patch webrtc compiler option for armv6
- sed -e 's|"-mfpu=$arm_fpu"|"-mfpu=$arm_fpu","-marm","-DPFFFT_SIMD_DISABLE=1"|' -i src/build/config/compiler/BUILD.gn
- pushd src
- sudo build/install-build-deps.sh
- sudo gn gen out/arm64 --args='target_os="linux" target_cpu="arm64" is_debug=false'
- sudo ninja -C out/arm64
- popd
- popd
# build
- echo CMAKE_OPTIONS=-DCMAKE_SYSTEM_PROCESSOR=armv7l -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY -DWEBRTCDESKTOPCAPTURE=OFF
- cmake -DCMAKE_SYSTEM_PROCESSOR=armv7l -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY -DWEBRTCDESKTOPCAPTURE=OFF . && make && cpack
before_deploy:
- export RELEASE_PKG_FILE=$(ls *.tar.gz)
- echo "RELEASE_PKG_FILE=${RELEASE_PKG_FILE}"   

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
  keep_history: true
  on:
    branch: master

jobs:
  include:
    - stage: docker
      os: windows 
      script:
        - docker info
        - docker build -f Dockerfile.windows .
